<!DOCTYPE html>
<html lang="eng">
<head>
<title>Pak Man Page</title>
</head>
<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->

</PRE>
<H2>SYNOPSIS</H2><PRE>
       <B>pak</B>
           <B>--all</B>
           <B>--cache</B> <B>dir</B>
           <B>--details</B>
           <B>--dir</B> <B>dir</B>
           <B>--force</B>
           <B>--log</B> <B>file:level</B>
           <B>--init</B>
           <B>--name</B> <B>name</B>
           <B>--nodeps</B>
           <B>--optional</B>
           <B>--paks</B> <B>dir</B>
           <B>--quiet</B>
           <B>--silent</B>
           <B>--verbose</B>
           <B>--versions</B>
           <B>--write</B>
           <B>commands</B> <B>...</B>


       <B>Commands:</B>
           cache packages...
           cached packages...
           config
           depend packages...
           edit key[=value]
           help
           init [name [version]]
           install packages...
           list packages...
           lockdown
           profile [debug|release|...]
           prune packages...
           search packages...
           uninstall packages...
           update packages...
           upgrade packages...
           version [major|minor|patch|other]


</PRE>
<H2>DESCRIPTION</H2><PRE>
       <B>Pak</B> is a package manager for application components.



</PRE>
<H2>WHY PAK?</H2><PRE>
       Existing package managers like NPM are excellent, but they are heavily
       focussed the needs of NodeJS and not for non-Node applications or general
       application components. Pak is agnostic to its environment and can be
       used to install components for any application.


</PRE>
<H2>FEATURES</H2><PRE>
       Pak has the following major features:
           . Fast, fast, fast.
           . Local cache of packages supports fast offline use.
           . Catalog web portal to search published packages.
           . Package.json is compatible with nodejs.



</PRE>
<H2>BASIC USAGE</H2><PRE>
       To install packages:
           pak install Endpoints...

       Where an ENDPOINT can be the name of a package published in a GitHub
       account/repository or a path to a local package directory. For example:

           pak install jquery
           pak install embedthis/exp-js
           pak install https://github.com/embedthis/exp-js.git
           pak install git@github.com:embedthis/jquery
           pak install ./my-source/graphics

       To uninstall
           pak uninstall Endpoints...

       To list installed packages
           pak list

       To display package dependencies
           pak depend

       To show what packages are present in the cache and where they originated
           pak cached

       To download and cache a package but not install in the local directory
           pak cache Name

       To prune old versions from the cache
           pak prune



</PRE>
<H2>OVERVIEW</H2><PRE>
       A package is described by a pak.json file (similar to the NPM
       package.json file). This provides at a minimum the following properties.

            {
                "name": "Package name - one word"
                "description": "Package description - one line"
                "version": "1.2.3",
                "keywords": [
                    "comms", "websockets", "sockets", "ssl",
                ],
                "author": {
                    "name": "Your name",
                    "email": "Your email",

           https://npmjs.org/doc/json.html




</PRE>
<H2>RUNNING</H2><PRE>
       To run Pak with more verbose trace output, use the [-v] --verbose switch.
       To run with less trace, use the [-q] --quiet switch.  To run completely
       silently except for hard-errors, use --silent.



</PRE>
<H2>CONFIGURATION</H2><PRE>
       On startup, Pak reads configuration from a pakrc file. This file defines
       the operational configuration for Pak.

       The "catalogs" property defines sites that index and catalog packs. The
       "paks" directory is the name of the local directory in which to store
       packages. The "pakcache" directory defines where to cache packages on the
       local system.

       Pak locates a valid pakrc file by searching in order:

           pakrc, .pakrc, ../pakrc, ../.pakrc, /etc/pakrc, pak.json



</PRE>
<H2>COMMANDS</H2><PRE>
       cache [packages...]
              Download and populate the cache with packages.

       cached [packages...]
              List packages in the cache.

       config Show the Pak configuration.

       depend [packages...]
              Display installed package dependencies.

       edit key[=value]...
              Edit a value in the pak.json package description file.

       help ...
              Display this Pak usage help.

       info packages...
              Display the README for a cached package.

       init [name [version]]
              Create a new pak.json.

       install packages...
              Install a package on the local system. The package name can be a
              name in an online catalog or it can be a GitHub endpoint URL or of
              the form 'account/repositiory'. Use the --write option to update
              "debug" or "release" configuration.

       prune [packages...]
              Prune named packages.

       search packages...
              Search for packages in the catalogs.

       uninstall
              Uninstall an installed package. Use --write to remove from the
              package dependencies.

       update [packages...]
              Update the pak cache with latest available version of the package.
              This will check with catalogs to determine the most recent
              versions of a package and will download the package and save in
              the cache.

       upgrade [packages...]
              Upgrade installed packages with the latest version of the package.
              This will update the cache if required.  Use --noupdate to upgrade
              only from the local cache without downloading new versions.

       version [major|minor|patch|other]
              Update the version by incrementing the relevant major, minor or
              patch portion of the version string.  Alternatively, provide an
              exact version string to set. Without any argument, 'pak version'
              will print the current version.



</PRE>
<H2>OPTIONS</H2><PRE>
       <B>--all</B> <B>URI</B>
              Show all versions of a package.


       <B>--cache</B> <B>directory</B>
              Specify the directory to use for the paks cache. This overrides
              the values specified in the various pakrc or pak.json files.


       <B>--details</B> <B>URI</B>
              Show more package details. Useful with "pak list".


       <B>--dir</B> <B>directory</B>
              Change to the given directory before running.


       <B>--force</B>
              Force the command to continue. This is useful to install or cache
              a package when dependencies cannot be satisfied.  It is also
              useful to cache or install an already cached/installed pack.

       <B>--nodeps</B>
              Used to suppress installing or upgrading dependent packages.


       <B>--optional</B>
              Used when installing packages to add them to the
              'optionalDependencies' list instead of as a hard dependency.


       <B>--paks</B> <B>directory</B>
              Specify the local "paks" directory in which to install packages.
              This overrides the values specified in the various pakrc or
              pak.json files.


       <B>--quiet</B>
              Run in quiet mode with less verbose otuput. Aliased as -q.


       <B>--silent</B>
              Run in silent mode suppressing all but hard errors. Aliased as -s.


       <B>--versions</B> <B>URI</B>
              Show package version information.


       <B>--write</B> <B>URI</B>
              Write installed packages to pak.json dependencies. Use --optional
              to update optionalDependencies.  When uninstalling, --write will
              remove the package from the dependencies and update the pak.json.



</PRE>
<H2>REPORTING BUGS</H2><PRE>
       Report bugs to dev@embedthis.com.


</PRE>
<H2>COPYRIGHT</H2><PRE>
       Copyright Â© Embedthis Software. Bit and Ejscript are a trademarks of
       Embedthis Software.


</PRE>
<H2>SEE ALSO</H2><PRE>
       https://www.embedthis.com/pak/



pak                                March 2014                             <B>PAK(1)</B>
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
</html>